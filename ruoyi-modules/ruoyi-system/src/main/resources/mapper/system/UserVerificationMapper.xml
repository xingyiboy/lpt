<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserVerificationMapper">

    <resultMap type="UserVerification" id="UserVerificationResult">
        <result property="id"    column="id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="userId"    column="user_id"    />
        <result property="riskType"    column="risk_type"    />
        <result property="verificationId"    column="verification_id"    />
        <result property="sort"    column="sort"    />
    </resultMap>

    <sql id="selectUserVerificationVo">
        select id, create_by, create_time, update_by, update_time, remark, user_id, risk_type, verification_id, sort from user_verification
    </sql>

    <select id="selectUserVerificationList" parameterType="UserVerification" resultMap="UserVerificationResult">
        <include refid="selectUserVerificationVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="riskType != null "> and risk_type = #{riskType}</if>
            <if test="verificationId != null "> and verification_id = #{verificationId}</if>
            <if test="sort != null "> and sort = #{sort}</if>
        </where>
        ORDER BY risk_type ASC, sort ASC
    </select>

    <select id="selectUserVerificationById" parameterType="Long" resultMap="UserVerificationResult">
        <include refid="selectUserVerificationVo"/>
        where id = #{id}
    </select>

    <insert id="insertUserVerification" parameterType="UserVerification" useGeneratedKeys="true" keyProperty="id">
        insert into user_verification
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="userId != null">user_id,</if>
            <if test="riskType != null">risk_type,</if>
            <if test="verificationId != null">verification_id,</if>
            <if test="sort != null">sort,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="userId != null">#{userId},</if>
            <if test="riskType != null">#{riskType},</if>
            <if test="verificationId != null">#{verificationId},</if>
            <if test="sort != null">#{sort},</if>
         </trim>
    </insert>

    <update id="updateUserVerification" parameterType="UserVerification">
        update user_verification
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="riskType != null">risk_type = #{riskType},</if>
            <if test="verificationId != null">verification_id = #{verificationId},</if>
            <if test="sort != null">sort = #{sort},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserVerificationById" parameterType="Long">
        delete from user_verification where id = #{id}
    </delete>

    <delete id="deleteUserVerificationByIds" parameterType="String">
        delete from user_verification where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
